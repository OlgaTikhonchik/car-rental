{"version":3,"file":"static/js/617.11b21e15.chunk.js","mappings":"wSAEaA,EAAOC,EAAAA,EAAAA,EAAH,gMAaJC,EAASD,EAAAA,EAAAA,IAAH,oGAMNE,EAAcF,EAAAA,EAAAA,IAAH,qDAIXG,EAAeH,EAAAA,EAAAA,IAAH,0LAYZI,EAASJ,EAAAA,EAAAA,OAAH,8f,qEC4FnB,EA9GkB,WAChB,IAAMK,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,IAC7BC,QAAQC,IAAI,WAAYH,GACxB,IAAMI,EAAmBP,EAAKQ,QAAO,SAAAC,GAAG,OAAIN,EAASO,SAASD,EAAIE,GAA1B,IACxCN,QAAQC,IAAI,mBAAoBC,GAChC,OAAwBK,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAYhB,EAAAA,EAAAA,IAAYiB,EAAAA,IAC9B,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MA8BjB,OAvBAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACTR,GAAc,GACdI,GAAW,GACXN,EAAQ,EACT,GAAE,CAACO,EAAUlB,KAEdoB,EAAAA,EAAAA,YAAU,WACRF,GAASI,EAAAA,EAAAA,GAAWZ,IACpBG,GAAc,GAEdI,GAAW,EACZ,GAAE,CAACC,EAAUR,KAYZ,iCACE,SAACa,EAAA,EAAD,WACE,2BAAO,iBAGT,SAACC,EAAA,EAAD,KAEA,yBAC+B,IAA5BpB,EAAiBqB,QAChB,iCACE,SAAClC,EAAD,UAAM,wDACN,SAACE,EAAD,CAAQiC,IAAKC,EAASC,IAAI,aAG5B,SAACjC,EAAD,UACGiB,GACCR,EAAiByB,KACf,gBACErB,EADF,EACEA,GACAsB,EAFF,EAEEA,MACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,YACAC,EANF,EAMEA,QACAC,EAPF,EAOEA,cACAC,EARF,EAQEA,gBACAC,EATF,EASEA,KACAC,EAVF,EAUEA,IACAC,EAXF,EAWEA,gBACAC,EAZF,EAYEA,WACAC,EAbF,EAaEA,YACAC,EAdF,EAcEA,YACAC,EAfF,EAeEA,iBACAC,EAhBF,EAgBEA,QAhBF,OAkBE,SAAClD,EAAD,WACE,SAACmD,EAAA,EAAD,CAEEf,MAAOA,EACPC,KAAMA,EACNC,KAAMA,EACNC,YAAaA,EACbC,QAASA,EACTC,cAAeA,EACfC,gBAAiBA,EACjB5B,GAAIA,EACJ6B,KAAMA,EACNC,IAAKA,EACLC,gBAAiBA,EACjBC,WAAYA,EACZC,YAAaA,EACbC,YAAaA,EACbC,iBAAkBA,EAClBC,QAASA,GAhBJpC,IAFSA,EAlBpB,QA4CmB,IAA5BJ,EAAiBqB,SAAiBX,GAAaE,IAC9C,SAACpB,EAAD,CAAQkD,QA1FU,WACtBnC,GAAQ,SAAAD,GAAI,OAAIA,EAAO,CAAX,GACb,EAwFK,SAAkC,gBAIzC,C","sources":["pages/Favorites/Favorite.styled.jsx","pages/Favorites/Favorites.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 50px;\n  font-weight: 700;\n  color: #523825;\n\n  :hover {\n    color: #815738;\n  }\n`;\n\nexport const Images = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  border-radius: 20px;\n`;\nexport const CatalogItem = styled.div`\n  padding: 0;\n  margin: 0;\n`;\nexport const FavoriteList = styled.div`\n  display: flex;\n\n  flex-wrap: wrap;\n  padding: 0;\n  justify-content: center;\n  gap: 29px;\n  flex-wrap: wrap;\n  margin-top: 50px;\n  flex-direction: row;\n`;\n\nexport const Button = styled.button`\n  width: 274px;\n  padding: 12px 0;\n  color: #fff;\n  font-family: Manrope;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 20px;\n  border-radius: 12px;\n  background-color: #3470ff;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  margin-top: auto;\n  box-shadow: 0px 3.43693px 3.43693px 0px rgba(0, 0, 0, 0.25);\n  margin-top: 20px;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #0b44cd;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport carsSet from '../../images/carsSet.png';\n\nimport Filter from 'components/Filter/Filter';\n\nimport {\n  Button,\n  CatalogItem,\n  FavoriteList,\n  Images,\n  Text,\n} from './Favorite.styled';\nimport { Helmet } from 'react-helmet';\nimport CatalogItemCar from 'components/CatalogItemCar/CatalogItemCar';\nimport { getAllCars } from 'redux/operations';\nimport { useEffect, useState } from 'react';\nimport { clearCarsData } from 'redux/carsSlice';\nimport { selectCars, selectFavorite, selectIsLoading } from 'redux/selectors';\n\nconst Favorites = () => {\n  const cars = useSelector(selectCars);\n  const favorite = useSelector(selectFavorite);\n  console.log('favorite', favorite);\n  const selectedFavorite = cars.filter(car => favorite.includes(car.id));\n  console.log('selectedFavorite', selectedFavorite);\n  const [page, setPage] = useState(1);\n  const [showButton, setShowButton] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n  const [hasMore, setHasMore] = useState(true);\n\n  const dispatch = useDispatch();\n  //const filtred = useSelector(selectFiltredCars);\n  // const render = filtred ? filtred : selectedFavorite;\n  const handleLoadClick = () => {\n    setPage(page => page + 1);\n  };\n\n  useEffect(() => {\n    dispatch(clearCarsData());\n    setShowButton(false);\n    setHasMore(false);\n    setPage(1);\n  }, [dispatch, favorite]);\n\n  useEffect(() => {\n    dispatch(getAllCars(page));\n    setShowButton(true);\n\n    setHasMore(true);\n  }, [dispatch, page]);\n\n  // ;\n  // useEffect(() => {\n  //   if (onFilter) {\n  //     dispatch(getAllCarsWithoutPage());\n  //   }\n  // }, [dispatch, onFilter]);\n\n  // const render = onFilter ? filtred : selectedFavorite;\n\n  return (\n    <>\n      <Helmet>\n        <title>Favorites</title>\n      </Helmet>\n\n      <Filter />\n\n      <div>\n        {selectedFavorite.length === 0 ? (\n          <>\n            <Text>You have not added any cars to your favorites yet.</Text>\n            <Images src={carsSet} alt=\"cars\" />\n          </>\n        ) : (\n          <FavoriteList>\n            {showButton &&\n              selectedFavorite.map(\n                ({\n                  id,\n                  model,\n                  make,\n                  year,\n                  rentalPrice,\n                  address,\n                  rentalCompany,\n                  functionalities,\n                  type,\n                  img,\n                  fuelConsumption,\n                  engineSize,\n                  description,\n                  accessories,\n                  rentalConditions,\n                  mileage,\n                }) => (\n                  <CatalogItem key={id}>\n                    <CatalogItemCar\n                      key={id}\n                      model={model}\n                      make={make}\n                      year={year}\n                      rentalPrice={rentalPrice}\n                      address={address}\n                      rentalCompany={rentalCompany}\n                      functionalities={functionalities}\n                      id={id}\n                      type={type}\n                      img={img}\n                      fuelConsumption={fuelConsumption}\n                      engineSize={engineSize}\n                      description={description}\n                      accessories={accessories}\n                      rentalConditions={rentalConditions}\n                      mileage={mileage}\n                    />\n                  </CatalogItem>\n                )\n              )}\n          </FavoriteList>\n        )}\n      </div>\n      {selectedFavorite.length !== 0 && !isLoading && hasMore && (\n        <Button onClick={handleLoadClick}>Load more</Button>\n      )}\n    </>\n  );\n};\n\nexport default Favorites;\n"],"names":["Text","styled","Images","CatalogItem","FavoriteList","Button","cars","useSelector","selectCars","favorite","selectFavorite","console","log","selectedFavorite","filter","car","includes","id","useState","page","setPage","showButton","setShowButton","isLoading","selectIsLoading","hasMore","setHasMore","dispatch","useDispatch","useEffect","clearCarsData","getAllCars","Helmet","Filter","length","src","carsSet","alt","map","model","make","year","rentalPrice","address","rentalCompany","functionalities","type","img","fuelConsumption","engineSize","description","accessories","rentalConditions","mileage","CatalogItemCar","onClick"],"sourceRoot":""}